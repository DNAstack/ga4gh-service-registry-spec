swagger: '2.0'
info:
  description: GA4GH service registry
  version: 1.0.0
  title: GA4GH Service Registry
  termsOfService: TBD
  contact:
    name: OICR
  license:
    name: GA4GH Service Registry
basePath: /ga4gh/registry/v1
paths:
  /nodes:
    get:
      tags:
        - Service Node list
      summary: Retrieve a list of service nodes (e.g., Beacon node, GA4GH DOS node )
      description: >-
        Provide a collection of service nodes.
      operationId: get_nodes
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: The auth token
          type: string
          required: true
        - name: name
          in: query
          description: A keyword to search in the field of `name` from service nodes.
          type: string
          required: false
        - name: alias
          in: query
          description: A keyword to search in the field of `aliases` from service nodes.
          type: string
          required: false
        - name: description
          in: query
          description: A keyword to search in the field of `description` from service nodes.
          type: string
          required: false
        - name: metadata
          in: query
          description: >-
            Query service nodes by specifying a list of <key, value> pairs AS STRING type,
            to match against the meta_date field of the service nodes.
            NOTE: as for now, OpenAPI does not support object as query parameter properly, this is a work-around solution until it support it!
          type: array
          required: false
          collectionFormat: pipes
          items:
            type: string
            x-example: {"key":"category", "value": "cancer"}
        - name: page_token
          in: query
          description: Page token to identify the record to start retrieval from.
          type: string
          required: false
        - name: page_size
          in: query
          description: The number of entries to be retrieved.
          type: integer
          required: false
      responses:
        '200':
          description: Return service nodes details.
          schema:
            $ref: '#/definitions/ServiceNodesResponse'
        '400':
          description: >-
            Indicates that the server could not understand the request. This is
            not the same as 422 which indicates a validation error.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '401':
          description: >-
            Unauthorized.  This will be returned when no authentication
            information is provided.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '403':
          description: >-
            The principal associated with the request does not have sufficient
            rights to perform this operation on the requested resource.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '422':
          description: >-
            The request was syntactically correct but was not semantically
            correct. Usually indicating a validation problem.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
    post:
      tags:
        - Create a service node
      summary: Create a service node (e.g., Beacon node, GA4GH DOS node etc.)
      description: >-
        Add/Create a service node, owned by the user.
      operationId: create_node
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: The auth token
          type: string
          required: true
        - name: request-body
          in: body
          description: 'Service node creation request'
          required: true
          schema:
            $ref: '#/definitions/ServiceNodeCreationRequest'
      responses:
        '201':
          description: Return the newly created service node details.
          schema:
            $ref: '#/definitions/ServiceNodeResponse'
        '400':
          description: >-
            Indicates that the server could not understand the request. This is
            not the same as 422 which indicates a validation error.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '401':
          description: >-
            Unauthorized.  This will be returned when no authentication
            information is provided.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '403':
          description: >-
            The principal associated with the request does not have sufficient
            rights to perform this operation on the requested resource.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '422':
          description: >-
            The request was syntactically correct but was not semantically
            correct. Usually indicating a validation problem.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
  /nodes/{node_id}:
    get:
      tags:
        - Retrieve a service node specified by {node_id}
      summary: Retrieve the information of the service node specified by {node_id}
      description:
        Retrieve the information of the service node specified by {node_id}
      operationId: get_node_by_id
      produces:
        - application/json
      parameters:
        - name: node_id
          in: path
          type: string
          required: true
          description: UUID of the service node to get
        - name: Authorization
          in: header
          description: The auth token
          type: string
          required: true
      responses:
        '200':
          description: Return service nodes details.
          schema:
            $ref: '#/definitions/ServiceNodeResponse'
        '400':
          description: >-
            Indicates that the server could not understand the request. This is
            not the same as 422 which indicates a validation error.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '401':
          description: >-
            Unauthorized.  This will be returned when no authentication
            information is provided.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '403':
          description: >-
            The principal associated with the request does not have sufficient
            rights to perform this operation on the requested resource.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '422':
          description: >-
            The request was syntactically correct but was not semantically
            correct. Usually indicating a validation problem.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
    put:
      tags:
        - Update a service node specified by {node_id}
      summary: Update the service node specified by {node_id}
      description: >-
        Update the service node specified by {node_id}
      operationId: update_node
      produces:
        - application/json
      parameters:
        - name: node_id
          in: path
          type: string
          required: true
          description: UUID of the service node to update
        - name: Authorization
          in: header
          description: The auth token
          type: string
          required: true
        - name: request-body
          in: body
          description: 'Service node update request'
          required: true
          schema:
            $ref: '#/definitions/ServiceNodeUpdateRequest'
      responses:
        '200':
          description: Return the newly updated service node details.
          schema:
            $ref: '#/definitions/ServiceNodeResponse'
        '400':
          description: >-
            Indicates that the server could not understand the request. This is
            not the same as 422 which indicates a validation error.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '401':
          description: >-
            Unauthorized.  This will be returned when no authentication
            information is provided.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '403':
          description: >-
            The principal associated with the request does not have sufficient
            rights to perform this operation on the requested resource.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '422':
          description: >-
            The request was syntactically correct but was not semantically
            correct. Usually indicating a validation problem.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
    delete:
      tags:
        - Delete a service node specified by {node_id}
      summary: Delete the service node specified by {node_id}
      description: >-
        Delete the service node specified by {node_id}
      operationId: delete_node
      produces:
        - application/json
      parameters:
        - name: node_id
          in: path
          type: string
          required: true
          description: UUID of the service node to delete
        - name: Authorization
          in: header
          description: The auth token
          type: string
          required: true
      responses:
        '200':
          description: Return the deleted service node details.
          schema:
            $ref: '#/definitions/ServiceNodeResponse'
        '400':
          description: >-
            Indicates that the server could not understand the request. This is
            not the same as 422 which indicates a validation error.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '401':
          description: >-
            Unauthorized.  This will be returned when no authentication
            information is provided.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '403':
          description: >-
            The principal associated with the request does not have sufficient
            rights to perform this operation on the requested resource.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '404':
          description: The requested resource was not found.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '422':
          description: >-
            The request was syntactically correct but was not semantically
            correct. Usually indicating a validation problem.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
  /dataobjects:
    get:
      tags:
        - Retrieve GA4GH DOS object list
      summary: Retrieve a list of GA4GH DOS objects by searching all the services eligible
      description: >-
        Provide a collection of GA4GH DOS objects by searching all the services eligible.
      operationId: get_dataobjects
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: The auth token
          type: string
          required: false
        - name: node_ids
          in: query
          description: query Data Objects by specifying a list of comma separated node_ids
          type: array
          required: false
          collectionFormat: csv
          items:
            type: string
        - name: dos_ids
          in: query
          description: >-
            query Data Objects by specifying a list of comma separated dos_ids
            NOTE: currently not supported in the dos-schema api
          type: array
          required: false
          collectionFormat: csv
          items:
            type: string
        - name: node_name
          in: query
          description: A keyword to search in the field of `name` from service node.
          type: string
          required: false
        - name: dos_name
          in: query
          description: >-
            If provided will only return Data Objects with the given `name`.
            NOTE: currently not supported in the dos-schema api
          type: string
          required: false
        - name: dos_version
          in: query
          description: >-
            If provided will only return Data Objects with the given `version`.
            NOTE: currently not supported in the dos-schema api
          type: string
          required: false
        - name: dos_mime_type
          in: query
          description: >-
            If provided will only return Data Objects with the given `mime_type`.
            NOTE: currently not supported in the dos-schema api
          type: string
          required: false
        - name: node_description
          in: query
          description: >-
            A keyword to search in the field of `description` from service node.
          type: string
          required: false
        - name: dos_description
          in: query
          description: >-
            A keyword to search in the field of `description` from Data Object.
            NOTE: currently not supported in the dos-schema api
          type: string
          required: false
        - name: node_alias
          in: query
          description: A keyword to search in the field of `aliases` from service node.
          type: string
          required: false
        - name: node_metadata
          in: query
          description: >-
            Query service nodes by specifying a list of <key, value> pairs AS STRING type,
            to match against the meta_date field of the service nodes.
            NOTE: as for now, OpenAPI does not support object as query parameter properly, this is a work-around solution until it support it!
          type: array
          required: false
          collectionFormat: pipes
          items:
            type: string
            x-example: {"key":"category", "value": "cancer"}
        - name: dos_alias
          in: query
          description: >-
            If provided will only return Data Objects with the given alias.
          type: string
          required: false
        - name: dos_url
          in: query
          description: >-
            If provided will return only Data Objects with a that URL matches
            this string.
          type: string
          required: false
        - name: dos_checksum
          in: query
          description: >-
            The hexlified checksum in Data Object that one would like to match on.
          type: string
          required: false
        - name: dos_date_created_from
          in: query
          description: >-
            query data objects by specific creation date range lower bound
            NOTE: currently not supported in the dos-schema api
          type: string
          format: date-time
          required: false
        - name: dos_date_created_to
          in: query
          description: >-
            query data objects by specific creation date range upper bound
            NOTE: currently not supported in the dos-schema api
          type: string
          format: date-time
          required: false
        - name: dos_date_updated_from
          in: query
          description: >-
            query data objects by specific updated date range lower bound
            NOTE: currently not supported in the dos-schema api
          type: string
          format: date-time
          required: false
        - name: dos_date_updated_to
          in: query
          description: >-
            query data objects by specific updated date range upper bound
            NOTE: currently not supported in the dos-schema api
          type: string
          format: date-time
          required: false
        - name: page_token
          in: query
          description: >-
            The continuation token, which is used to page through large result sets.
            To get the next page of results, set this parameter to the value of
            `next_page_token` from the previous response.
          type: string
          required: false
        - name: page_size
          in: query
          description: >-
            Specifies the maximum number of results to return in a single page.
            If unspecified, a system default will be used.
          type: integer
          required: false
      responses:
        '200':
          description: Return Ga4gh DOS object list.
          schema:
            $ref: '#/definitions/Ga4ghDataObjectsResponse'
        '400':
          description: >-
            Indicates that the server could not understand the request. This is
            not the same as 422 which indicates a validation error.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '401':
          description: >-
            Unauthorized.  This will be returned when no authentication
            information is provided.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '403':
          description: >-
            The principal associated with the request does not have sufficient
            rights to perform this operation on the requested resource.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '422':
          description: >-
            The request was syntactically correct but was not semantically
            correct. Usually indicating a validation problem.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
        '500':
          description: Internal Server Error.
          schema:
            $ref: '#/definitions/ErrorDataResponse'
definitions:
  ServiceNodesResponse:
    type: object
    properties:
      dos_nodes:
        type: array
        items:
          $ref: '#/definitions/ServiceNode'
      next_page_token:
        description: >-
          The continuation token, which is used to page through large result sets.
          To get the next page of results, set this parameter to the value of
          `next_page_token` from the previous response. This value is
          left absent when there are no more values to return
        type: string
        example: ASDEFSEVTYIKMLI
  ServiceNodeResponse:
    type: object
    properties:
      dos_node:
        $ref: '#/definitions/ServiceNode'
  Ga4ghDataObjectsResponse:
    type: object
    properties:
      dos_objects:
        type: array
        items:
          "$ref": "#/definitions/Ga4ghDataObjectOnNode"
        description: The list of Data Objects.
      next_page_token:
        description: >-
          The continuation token, which is used to page through large result sets.
          To get the next page of results, set this parameter to the value of
          `next_page_token` from the previous response. This value is
          left absent when there are no more values to return
        type: string
        example: ASDEFSEVTYIKMLI
    title: A list of GA4GH data objects
  ServiceNodeCreationRequest:
    type: object
    description: 'The object containing information/metadata for the to-be-created service node.'
    properties:
      url:
        type: string
        description: >-
          REQUIRED
          The http/https address of this service node.
      meta_data:
        type: object
        additionalProperties:
          type: string
        description: >-
          OPTIONAL
          A set of key-value pairs that represent metadata specific to this service node provided by the user
        example:
          data_category: KidsCancer
      name:
        type: string
        description: >-
          OPTIONAL
          The name of the service node to be created
        example: AWS-USE2-DATANODE-1
      aliases:
        type: array
        items:
          type: string
        description: >-
         OPTIONAL
         A list of strings that can be used to find this service node to make it more discoverable.
      description:
        type: string
        description: >-
          OPTIONAL
          A human readable general description of this service node.
      service_type:
        $ref: '#/definitions/ServiceNodeTypeEnum'
    required:
        - url
  ServiceNodeUpdateRequest:
    type: object
    description: 'The object containing information for the to-be-updated service node.'
    properties:
      meta_data:
        type: object
        additionalProperties:
          type: string
        description: >-
          OPTIONAL
          A set of key-value pairs that represent metadata specific to this service node provided by the user
        example:
          data_category: KidsCancer
      name:
        type: string
        description: 'OPTIONAL User specified name for the service node'
        example: AWS-USE2-SERVICENODE-1
      aliases:
        type: array
        items:
          type: string
        description: 'OPTiONAL A list of strings that can be used to find this service node to make it more discoverable.'
      description:
        type: string
        description: >-
          OPTIONAL
          A human readable general description of this service node.
  ServiceNode:
    type: object
    title: >-
      Service Node - a server which serves ga4ghDataObjects (e.g., file, API or other resource)
    properties:
      id:
        type: string
        description: >-
          REQUIRED
          An identifier unique to this service node.
      name:
        type: string
        description: >-
          OPTIONAL
          A string that can be optionally used to name a service node.
      url:
        type: string
        description: >-
          REQUIRED
          The url (e.g., http/https address) of this service node.
      meta_data:
        type: object
        additionalProperties:
          type: string
        description: >-
          OPTIONAL
          A set of key-value pairs that represent metadata specific to this service node provided by the user
        example:
          data_category: KidsCancer
      health_status:
        type: string
        description: >-
          OPTIONAL
          The health status of this service node. The implementation of this field value
            could be set via periodic `ping` calls to the url of this service node, or could
            be set via the last query of data objects on this service node.
        example: UP
      created:
        type: string
        format: date-time
        description: >-
          OPTIONAL
          Timestamp of service node creation/addition in RFC3339.
      last_health_updated:
        type: string
        format: date-time
        description: >-
          OPTIONAL
          Timestamp of the last health check was updated in RFC3339,
          identical to create timestamp in systems that do not support updates.
          The implementation of this field value
            could be set via periodic `ping` calls to the url of this service node, or could
            be set via the last query of data objects on this service node.
      description:
        type: string
        description: >-
          OPTIONAL
          A human readable general description of this service node.
      aliases:
        type: array
        items:
          type: string
        title: >-
          OPTIONAL
          A list of strings that can be used to find this service node
          to make it more discoverable.
      service_type:
        $ref: '#/definitions/ServiceNodeTypeEnum'
    required:
      - id
      - url
  ServiceNodeTypeEnum:
    type: string
    description: >
      Indicates the type of the service node (e.g. DOS, BEACON etc.).
      By default, it assumes to be DOS type if not specified.
    enum:
      - DOS
      - BEACON
  Ga4ghDataObjectOnNode:
    type: object
    title: 'Data Object from a service node: a file, API or other resource'
    allOf:
      - $ref: '#/definitions/Ga4ghDataObject'
      - properties:
          node_id:
            type: string
            description: >-
              REQUIRED
              An identifier unique to the service node where this Data Object is from.
  Ga4ghDataObject:
    type: object
    properties:
      id:
        type: string
        description: |-
          REQUIRED
          An identifier unique to this Data Object.
      name:
        type: string
        description: |-
          OPTIONAL
          A string that can be optionally used to name a Data Object.
      size:
        type: string
        format: int64
        description: |-
          REQUIRED
          The computed size in bytes.
      created:
        type: string
        format: date-time
        description: |-
          REQUIRED
          Timestamp of object creation in RFC3339.
      updated:
        type: string
        format: date-time
        description: |-
          OPTIONAL
          Timestamp of update in RFC3339, identical to create timestamp in systems
          that do not support updates.
      version:
        type: string
        description: |-
          OPTIONAL
          A string representing a version.
      mime_type:
        type: string
        description: |-
          OPTIONAL
          A string providing the mime-type of the Data Object.
          For example, "application/json".
      checksums:
        type: array
        items:
          $ref: '#/definitions/Checksum'
        description: |-
          REQUIRED
          The checksum of the Data Object. At least one checksum must be provided.
      urls:
        type: array
        items:
          $ref: '#/definitions/URL'
        description: |-
          OPTIONAL
          The list of URLs that can be used to access the Data Object.
      description:
        type: string
        description: |-
          OPTIONAL
          A human readable description of the contents of the Data Object.
      aliases:
        type: array
        items:
          type: string
        title: |-
          OPTIONAL
          A list of strings that can be used to find this Data Object.
          These aliases can be used to represent the Data Object's location in
          a directory (e.g. "bucket/folder/file.name") to make Data Objects
          more discoverable. They might also be used to represent
    required:
      - id
      - size
      - created
      - checksums
    title: 'Data Object: a file, API or other resource'
  Checksum:
    type: object
    properties:
      checksum:
        type: string
        description: |-
          REQUIRED
          The hex-string encoded checksum for the Data.
      type:
        type: string
        description: |-
          OPTIONAL
          The digest method used to create the checksum. If left unspecified md5
          will be assumed.

          possible values:
          md5                # most blob stores provide a checksum using this
          multipart-md5      # multipart uploads provide a specialized tag in S3
          sha256
          sha512
    required:
      - checksum
  URL:
    type: object
    properties:
      url:
        type: string
        description: |-
          REQUIRED
          A URL that can be used to access the file.
      system_metadata:
        $ref: '#/definitions/SystemMetadata'
      user_metadata:
        $ref: '#/definitions/UserMetadata'
    required:
      - url
  SystemMetadata:
    type: object
    additionalProperties: true
    description: |-
            OPTIONAL
            These values are reported by the underlying object store.
            A set of key-value pairs that represent system metadata about the object.
  UserMetadata:
    type: object
    additionalProperties: true
    description: |-
            OPTIONAL
            A set of key-value pairs that represent metadata provided by the uploader.
  Error:
    type: object
    properties:
      code:
        type: string
        example: E422CDNPAYRCPTG001
        description: 'Notification code. For instance, developer could make the first character indicate severity (E,W,F).'
      message:
        type: string
        example: Something is invalid
        description: >-
          Description of the error or information notification. Where the
          response is 2xx, it's a notification with informational details about
          this response.
      uuid:
        type: string
        example: aadde-ddddee-eeeedd-eeeedd
        description: Unique identifier for this notification
      timestamp:
        type: string
        format: date-time
        example: 2017-10-12T20:38:45.408Z
        description: Timestamp of the notification
      metadata:
        type: object
        additionalProperties:
          type: object
        description: Context specific to this area. May not be provided.
  ErrorDataResponse:
    type: object
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/Error'